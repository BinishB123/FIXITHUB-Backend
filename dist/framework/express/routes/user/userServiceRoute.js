"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const userRepo_1 = __importDefault(require("../../../../interface_adapters/repositories/userRepo"));
const userService_1 = __importDefault(require("../../../../usecases/user/userService"));
const userService_2 = __importDefault(require("../../../../interface_adapters/controllers/user/userService"));
const DateChecker_1 = __importDefault(require("../../../../framework/express/middleware/DateChecker"));
const stripe_1 = __importDefault(require("../../../services/stripe"));
const multer_1 = __importDefault(require("../../../../framework/services/multer"));
const cloudinary_1 = __importDefault(require("../../../../framework/services/cloudinary"));
const userServiceRoute = express_1.default.Router();
const respository = new userRepo_1.default();
const stripe = new stripe_1.default();
const interactor = new userService_1.default(respository, stripe);
const cloduinary = new cloudinary_1.default();
const userServiceContoller = new userService_2.default(interactor, stripe, cloduinary);
userServiceRoute.get("/getservices/:category", userServiceContoller.getServices.bind(userServiceContoller));
userServiceRoute.get("/getallbrands", userServiceContoller.getAllBrands.bind(userServiceContoller));
userServiceRoute.get("/getshops", userServiceContoller.getAllshops.bind(userServiceContoller));
userServiceRoute.get("/getshopdetail", userServiceContoller.getshopProfileWithSelectedServices.bind(userServiceContoller));
userServiceRoute.get("/getbookingdates/:id", userServiceContoller.getBookingDates.bind(userServiceContoller));
userServiceRoute.post("/checkout-session", DateChecker_1.default, userServiceContoller.checkOut_Session.bind(userServiceContoller));
userServiceRoute.get("/latestBooking/:userid/", userServiceContoller.getLatestBooking.bind(userServiceContoller));
userServiceRoute.get("/servicehistory/:userid/:startindex/:endindex", userServiceContoller.getServiceHistory.bind(userServiceContoller));
userServiceRoute.post("/makefullpayment", userServiceContoller.fullpayment.bind(userServiceContoller));
userServiceRoute.patch("/cancelpayment", userServiceContoller.cancelBooking.bind(userServiceContoller));
userServiceRoute.post("/addReview", multer_1.default.array("images"), userServiceContoller.addReview.bind(userServiceContoller));
userServiceRoute.get("/getreviewdetails/:id", userServiceContoller.getReviewDeatils.bind(userServiceContoller));
userServiceRoute.patch("/deleteanimage", userServiceContoller.deleteOneImage.bind(userServiceContoller));
userServiceRoute.patch("/editreview", userServiceContoller.editReview.bind(userServiceContoller));
userServiceRoute.patch("/addanimage", userServiceContoller.addOneImage.bind(userServiceContoller));
userServiceRoute.get("/getfeedbacks/:id/:limit", userServiceContoller.getFeedBacks.bind(userServiceContoller));
exports.default = userServiceRoute;
