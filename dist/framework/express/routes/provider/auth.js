"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const providerRepo_1 = __importDefault(require("../../../../interface_adapters/repositories/providerRepo"));
const mailer_1 = __importDefault(require("../../../../framework/services/mailer"));
const auth_1 = __importDefault(require("../../../../usecases/provider/auth"));
const providerAuth_1 = __importDefault(require("../../../../interface_adapters/controllers/provider/providerAuth"));
const jwt_1 = __importDefault(require("../../../services/jwt"));
const jwtAuthenticate_1 = __importDefault(require("../../../../framework/express/middleware/jwtAuthenticate"));
const express_1 = __importDefault(require("express"));
const providerAuthRouter = express_1.default.Router();
const respository = new providerRepo_1.default();
const mailer = new mailer_1.default();
const jwtServices = new jwt_1.default(process.env.ACCESSTOKENKEY + "", process.env.REFRESHTOKENKEY + "");
const providerAuthInteractor = new auth_1.default(respository, mailer, jwtServices);
const providerAuthController = new providerAuth_1.default(providerAuthInteractor);
providerAuthRouter.post("/sendotp", providerAuthController.sendOtp.bind(providerAuthController));
providerAuthRouter.post("/verifyotp", providerAuthController.verifyOtp.bind(providerAuthController));
providerAuthRouter.post("/register", providerAuthController.registerProvider.bind(providerAuthController));
providerAuthRouter.post("/signin", providerAuthController.signInProvider.bind(providerAuthController));
providerAuthRouter.get("/checker", (0, jwtAuthenticate_1.default)("provider"), providerAuthController.checker.bind(providerAuthController));
providerAuthRouter.delete("/logout", providerAuthController.logot.bind(providerAuthController));
exports.default = providerAuthRouter;
