"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const providerRepo_1 = __importDefault(require("../../../../interface_adapters/repositories/providerRepo"));
const providerServices_1 = __importDefault(require("../../../../usecases/provider/providerServices"));
const providerService_1 = __importDefault(require("../../../../interface_adapters/controllers/provider/providerService"));
const express_1 = __importDefault(require("express"));
const providerAddServiceRoute = express_1.default.Router();
const respository = new providerRepo_1.default();
const interactor = new providerServices_1.default(respository);
const controller = new providerService_1.default(interactor);
providerAddServiceRoute.get("/getallorganisedServices", controller.getProviderAllService.bind(controller));
providerAddServiceRoute.post("/addgeneralorroadservice", controller.addGeneralOrRoadService.bind(controller));
providerAddServiceRoute.post("/addsubtype", controller.addSubTypes.bind(controller));
providerAddServiceRoute.patch("/editsubtype", controller.editSubType.bind(controller));
providerAddServiceRoute.delete("/deletesubtype", controller.deleteSubTpe.bind(controller));
providerAddServiceRoute.get("/getallbrands", controller.getallBrands.bind(controller));
providerAddServiceRoute.post("/addbrands", controller.addBrands.bind(controller));
providerAddServiceRoute.patch("/removeBrand", controller.deleteBrand.bind(controller));
providerAddServiceRoute.patch("/removerservice/:typeid/:workshopId/:vehicleType", controller.removeGeneralOrRoadService.bind(controller));
exports.default = providerAddServiceRoute;
